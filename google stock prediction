import numpy as np
import pandas as pd  
from sklearn.preprocessing import MinMaxScaler
from sklearn.model_selection import train_test_split


data = pd.read_csv('google.csv')

data_set = data.iloc[:, 2:3].values

# Scale the data
scaler = MinMaxScaler(feature_range=(0, 1))
tra = scaler.fit_transform(data_set)

# Split the data into training and testing sets
x_train, x_test, y_train, y_test = train_test_split(tra, tra, test_size=0.2, random_state=42)

# Reshape the data for LSTM input
x_train = np.reshape(x_train, (x_train.shape[0], x_train.shape[1], 1))


from keras.models import Sequential
from keras.layers import Dense
from keras.layers import LSTM, Input
from keras.layers import Dropout

regression=Sequential()

regression.add(Input(shape=(x_train.shape[1], 1)))
regression.add(LSTM(units=50, return_sequences=True))
regression.add(Dropout(0.2))


regression.add(LSTM(units=50,return_sequences=True))
regression.add(Dropout(0.2))


regression.add(LSTM(units=50,return_sequences=True))
regression.add(Dropout(0.2))

regression.add(Dropout(0.2))


regression.compile(optimizer='adam',loss='mean_squared_error')

regression.fit(x_train,y_train,epochs=100,batch_size=32)

prediction=regression.predict(x_test)

import matplotlib.pyplot as plt

plt.plot(y_test)
plt.plot(prediction)
plt.legend()
plt.show()
